<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.samil.stdadt.mapper.HistoryMapper">

	<select id="getPrjtInfoSimpleHist"  parameterType="ProjectVersionVO"  resultType="com.samil.stdadt.comm.vo.CamelMap">
		SELECT PRJTCD PRJT_CD, 
		       SATGRP_CD, 
		       PRFL_ID, 
		       REPLACE(PRJT_FRDT, '-', '') PRJT_FRDT, 
		       REPLACE(PRJT_TODT, '-', '') PRJT_TODT, 
		       STAT 
		  FROM WEB_SAT_PRJT_H 
		 WHERE PRJTCD = #{prjtCd} AND VERSION = #{version} 
	</select>
	
	<insert id="addHistVersion" parameterType="ProjectVersionVO" >
		<selectKey resultType="long" keyProperty="version" order="BEFORE">
			SELECT NVL(MAX(VERSION), 0) + 1 FROM NMSP.WEB_SAT_HIST WHERE PRJTCD = #{prjtCd}
		</selectKey>
		INSERT INTO NMSP.WEB_SAT_HIST(PRJTCD,VERSION,VERSION_TY,CREBY)
		VALUES(#{prjtCd}, #{version}, #{versionTy}, #{creBy})
	</insert>
	<delete id="delHistVersion" parameterType="ProjectVersionVO">
		DELETE FROM NMSP.WEB_SAT_HIST WHERE PRJTCD = #{prjtCd} AND VERSION = #{version}
	</delete>
	
	<insert id="addPrjtHist" parameterType="ProjectVersionVO">
		INSERT INTO NMSP.WEB_SAT_PRJT_H(PRJTCD,VERSION,PRFL_ID,PRJTCD1,PRJTCD2,PRJTCD3,PRJT_TODT,PRJT_FRDT,CNTRT_FEE,RCRD_MGR,ET_DFN_SAT,ETC_BDGT_TM,SATGRP_CD,SATGRP1_EXPT_YN,INDUS_CD,
				LIST_DV_CD,INDIV_ASSET,CONSO_SALES,CONSO_ASSET,DESIG_ADT_YN,BIZ_RPRT_YN,PRIOR_ADT_TM,USA_LIST_YN,HOLDINGS_DIV_CD,CONSO_FINSTAT_YN,SBSID_CNT,RPRT_SCDL_DT,FIRST_ADT_YN,
				FIRST_ADT_FCTR,IFRS_YN,CONSO_INVNT,CONSO_ACCNT_RECEIV,CURR_CONSO_LOSS_YN,CURR_ADTOPIN_CD,INTR_TRAN_ASSET_SALES,RELAT_COMP_ASSET,SBSID_ASSET_WITH_INTR_TRAN,
				SBSID_SALES_WITH_INTR_TRAN,RA_BDGT_TM,RA_BDGT_MGR,FLCM_BDGT_TM,FLCM_BDGT_MGR,NEW_STF_BDGT_TM,OTHER_BDGT_TM,RJCT_CMNT,APRV_REQ_EMPLNO,APRV_REQ_DT,APRV_CMPLT_DT,STAT,
				CREDT,CREBY,MODDT,MODBY,RETAIN_TRAN_YN,RETAIN_TRAN_DT,RETAIN_TRAN_EMPLNO,ET_TRGT_ADT_TM,SAT_TRGT_YN,BASE_WKMNSP,NEW_STF_WKMNSP,OTHER_WKMNSP,FACTOR_VAL,INTR_ADT_YN,
				INTR_ADT_TM,CAL_ADT_TM,RETAIN_SCDL_YN,RETAIN_SCDL_DT,RETAIN_SCDL_BASE_DT,CMPLT_CNT,RCRD_MGR2,RCRD_MGR3,FORM_DIV,CALC_ONLY_YN,COMP_NM,BIZ_FRDT,BIZ_TODT,FIRST_BIZ_DT,
				CONTI_ADT_CNT,INTR_ADT_YCNT,REVW_CNT,KAM_YN,PRIOR_ADTOPIN_CHG_YN,PRIOR_ADTOPIN_CHG_FCTR,PRIOR_LOSS_YN,PRIOR_LOSS_FCTR,ETC_FCTR,MIN_MAX_YN,MIN_MAX_REASON_CD,
				MIN_MAX_REASON_DSCRT,FST_MAX_TM,FST_ADT_TM,FST_ADTR_BASE_WKMNSP_YN,FST_ADTR_WKMNSP,FST_ADT_TM_REASON_CD,FST_ADT_TM_REASON_DSCRT,FST_WKMNSP_REASON_CD,FST_WKMNSP_REASON_DSCRT,
				PRIOR_ADTR_CD,PRIOR_BASE_WKMNSP,PRIOR_ADTR_BASE_WKMNSP_YN,PRIOR_ADTR_WKMNSP,PRIOR_ADT_TM_REASON_CD,PRIOR_ADT_TM_REASON_DSCRT,PRIOR_WKMNSP_REASON_CD,
				PRIOR_WKMNSP_REASON_DSCRT,MIN_TM,MAX_TM,INTPL_SAT,CAL_RESULT,YEAR_RATE,INTR_ADT_FCTR,IFRS_FCTR,HOLDINGS_FCTR,USA_LIST_FCTR,RISK_FCTR,KAM_FCTR,CONSO_FINSTAT_FCTR,
				SBSID_CNT_FCTR,CURR_ADTOPIN_FCTR,CURR_CONSO_LOSS_FCTR,SAME_ADTR_SBSID_YN,BDGT_TRGT_YN,RETAIN_SCDL_LOCA_CD,REMARK,DEL_DT,DEL_EMPLNO,PREV_STAT,MOD_REASON_CD,MOD_REASON_CMNT
				)
		SELECT PRJTCD,#{version},PRFL_ID,PRJTCD1,PRJTCD2,PRJTCD3,PRJT_TODT,PRJT_FRDT,CNTRT_FEE,RCRD_MGR,ET_DFN_SAT,ETC_BDGT_TM,SATGRP_CD,SATGRP1_EXPT_YN,INDUS_CD,
				LIST_DV_CD,INDIV_ASSET,CONSO_SALES,CONSO_ASSET,DESIG_ADT_YN,BIZ_RPRT_YN,PRIOR_ADT_TM,USA_LIST_YN,HOLDINGS_DIV_CD,CONSO_FINSTAT_YN,SBSID_CNT,RPRT_SCDL_DT,FIRST_ADT_YN,
				FIRST_ADT_FCTR,IFRS_YN,CONSO_INVNT,CONSO_ACCNT_RECEIV,CURR_CONSO_LOSS_YN,CURR_ADTOPIN_CD,INTR_TRAN_ASSET_SALES,RELAT_COMP_ASSET,SBSID_ASSET_WITH_INTR_TRAN,
				SBSID_SALES_WITH_INTR_TRAN,RA_BDGT_TM,RA_BDGT_MGR,FLCM_BDGT_TM,FLCM_BDGT_MGR,NEW_STF_BDGT_TM,OTHER_BDGT_TM,RJCT_CMNT,APRV_REQ_EMPLNO,APRV_REQ_DT,APRV_CMPLT_DT,STAT,
				CREDT,CREBY,MODDT,MODBY,RETAIN_TRAN_YN,RETAIN_TRAN_DT,RETAIN_TRAN_EMPLNO,ET_TRGT_ADT_TM,SAT_TRGT_YN,BASE_WKMNSP,NEW_STF_WKMNSP,OTHER_WKMNSP,FACTOR_VAL,INTR_ADT_YN,
				INTR_ADT_TM,CAL_ADT_TM,RETAIN_SCDL_YN,RETAIN_SCDL_DT,RETAIN_SCDL_BASE_DT,CMPLT_CNT,RCRD_MGR2,RCRD_MGR3,FORM_DIV,CALC_ONLY_YN,COMP_NM,BIZ_FRDT,BIZ_TODT,FIRST_BIZ_DT,
				CONTI_ADT_CNT,INTR_ADT_YCNT,REVW_CNT,KAM_YN,PRIOR_ADTOPIN_CHG_YN,PRIOR_ADTOPIN_CHG_FCTR,PRIOR_LOSS_YN,PRIOR_LOSS_FCTR,ETC_FCTR,MIN_MAX_YN,MIN_MAX_REASON_CD,
				MIN_MAX_REASON_DSCRT,FST_MAX_TM,FST_ADT_TM,FST_ADTR_BASE_WKMNSP_YN,FST_ADTR_WKMNSP,FST_ADT_TM_REASON_CD,FST_ADT_TM_REASON_DSCRT,FST_WKMNSP_REASON_CD,FST_WKMNSP_REASON_DSCRT,
				PRIOR_ADTR_CD,PRIOR_BASE_WKMNSP,PRIOR_ADTR_BASE_WKMNSP_YN,PRIOR_ADTR_WKMNSP,PRIOR_ADT_TM_REASON_CD,PRIOR_ADT_TM_REASON_DSCRT,PRIOR_WKMNSP_REASON_CD,
				PRIOR_WKMNSP_REASON_DSCRT,MIN_TM,MAX_TM,INTPL_SAT,CAL_RESULT,YEAR_RATE,INTR_ADT_FCTR,IFRS_FCTR,HOLDINGS_FCTR,USA_LIST_FCTR,RISK_FCTR,KAM_FCTR,CONSO_FINSTAT_FCTR,
				SBSID_CNT_FCTR,CURR_ADTOPIN_FCTR,CURR_CONSO_LOSS_FCTR,SAME_ADTR_SBSID_YN,BDGT_TRGT_YN,RETAIN_SCDL_LOCA_CD,REMARK,DEL_DT,DEL_EMPLNO,PREV_STAT,MOD_REASON_CD,MOD_REASON_CMNT
		  FROM NMSP.WEB_SAT_PRJT 
		 WHERE PRJTCD = #{prjtCd}
	</insert>
	<delete id="delPrjtHist" parameterType="ProjectVersionVO">
		DELETE FROM NMSP.WEB_SAT_PRJT_H WHERE PRJTCD = #{prjtCd} AND VERSION = #{version}
	</delete>
	
	<insert id="addSubPrjtHist" parameterType="ProjectVersionVO">
		INSERT INTO NMSP.WEB_SAT_SUB_PRJT_H(P_PRJTCD,VERSION,PRJTCD,PRJTCD1,PRJTCD2,PRJTCD3,CNTRT_FEE,ORDBY,CREDT,CREBY,MODDT,MODBY,BDGT_TRGT_YN,CNTRT_ADT_TM)
		SELECT P_PRJTCD,#{version},PRJTCD,PRJTCD1,PRJTCD2,PRJTCD3,CNTRT_FEE,ORDBY,CREDT,CREBY,MODDT,MODBY,BDGT_TRGT_YN,CNTRT_ADT_TM
		FROM WEB_SAT_SUB_PRJT WHERE P_PRJTCD = #{prjtCd}
	</insert>
	<delete id="delSubPrjtHist" parameterType="ProjectVersionVO">
		DELETE FROM NMSP.WEB_SAT_SUB_PRJT_H WHERE PRJTCD = #{prjtCd} AND VERSION = #{version}
	</delete>
	
	<insert id="addMembHist" parameterType="ProjectVersionVO">
		INSERT INTO NMSP.WEB_SAT_MEMB_H(PRJTCD,VERSION,MEMB_EMPLNO,ACTV_CD,LOCA_CD,GRADCD,WKMNSP,CREDT,CREBY,MODDT,MODBY,TBD,SUB_PRJTCD)
		SELECT PRJTCD,#{version},MEMB_EMPLNO,ACTV_CD,LOCA_CD,GRADCD,WKMNSP,CREDT,CREBY,MODDT,MODBY,TBD,SUB_PRJTCD
		  FROM NMSP.WEB_SAT_MEMB 
		 WHERE PRJTCD = #{prjtCd}
	</insert>
	<delete id="delMembHist" parameterType="ProjectVersionVO">
		DELETE FROM NMSP.WEB_SAT_MEMB_H WHERE PRJTCD = #{prjtCd} AND VERSION = #{version}
	</delete>
	
	<insert id="addMembBdgtHist" parameterType="ProjectVersionVO">
		INSERT INTO NMSP.WEB_SAT_MEMB_BDGT_H(PRJTCD,VERSION,MEMB_EMPLNO,ACTV_CD,LOCA_CD,WEEK_FRDT,ASGN_TM,CREDT,CREBY,MODDT,MODBY,SUB_PRJTCD)
		SELECT PRJTCD,#{version},MEMB_EMPLNO,ACTV_CD,LOCA_CD,WEEK_FRDT,ASGN_TM,CREDT,CREBY,MODDT,MODBY,SUB_PRJTCD 
		FROM NMSP.WEB_SAT_MEMB_BDGT WHERE PRJTCD = #{prjtCd}
	</insert>
	<delete id="delMembBdgtHist" parameterType="ProjectVersionVO">
		DELETE FROM NMSP.WEB_SAT_MEMB_BDGT_H WHERE PRJTCD = #{prjtCd} AND VERSION = #{version}
	</delete>
	
	<select id="getVersionAprvComplete" parameterType="ProjectVersionVO" resultType="com.samil.stdadt.comm.vo.CamelMap">
		SELECT MAX(VERSION) VERSION FROM WEB_SAT_HIST WHERE PRJTCD=#{prjtCd} AND VERSION_TY='CO'
	</select>
	
	<select id="getProjectBudgetSummaryHist" parameterType="ProjectVersionVO" resultType="ProjectBudgetSummaryVO">
		SELECT A.*,
			(A.RA_BDGT_TM + A.FLCM_BDGT_TM + A.NEW_STF_BDGT_TM +  A.OTHER_BDGT_TM + A.SUM_MEMB_BDGT) TOT_MEMB_BDGT,
			(A.RA_BDGT_TM * A.BASE_WKMNSP + A.FLCM_BDGT_TM * A.BASE_WKMNSP + A.NEW_STF_BDGT_TM * A.NEW_STF_WKMNSP + A.OTHER_BDGT_TM * A.BASE_WKMNSP + A.SUM_MEMB_BDGT_WKMNSP) TOT_MEMB_BDGT_WKMNSP
		FROM (
			SELECT 
			   A.PRJTCD, 
			   A.PRFL_ID, 
			   A.PRJTNM, 
			   A.PRJT_FRDT, 
			   A.PRJT_TODT, 	
			   A.SATGRP_CD,
			   A.RETAIN_TRAN_YN, 
			   SF_APPMNG_GET_COMMCD(#{appCd}, 'SATGRP', A.SATGRP_CD, 'NM') SATGRP_NM, 
			   A.CNTRT_FEE, 
			   ((NVL((SELECT SUM(SPRJT.CNTRT_FEE) FROM NMSP.WEB_SAT_SUB_PRJT SPRJT WHERE SPRJT.P_PRJTCD = A.PRJTCD),0) + NVL(A.CNTRT_FEE,0))/ 1000000) TOT_CNTRT_FEE, 
			   A.CAL_ADT_TM + A.INTR_ADT_TM CAL_SAT,
			   A.ET_DFN_SAT,
			   A.ETC_BDGT_TM,
			   A.ET_DFN_SAT * A.BASE_WKMNSP WKMNSP_SAT,
			   NVL(A.ET_TRGT_ADT_TM, 0) + NVL(A.ETC_BDGT_TM, 0) TOT_PRJT_BDGT,
			   NVL(B.SUM_MEMB_BDGT, 0) SUM_MEMB_BDGT,
			   NVL(B.SUM_MEMB_BDGT_WKMNSP, 0) SUM_MEMB_BDGT_WKMNSP,
			   NVL(A.RA_BDGT_TM, 0) RA_BDGT_TM,
			   NVL(A.FLCM_BDGT_TM, 0) FLCM_BDGT_TM,
			   NVL(A.NEW_STF_BDGT_TM, 0) NEW_STF_BDGT_TM,
			   NVL(A.OTHER_BDGT_TM, 0) OTHER_BDGT_TM,
			   NVL(A.BASE_WKMNSP, NVL((SELECT BASE_WKMNSP FROM WEB_SAT_PRFL_GRP WHERE PRFL_ID = A.PRFL_ID AND SATGRP_CD = A.SATGRP_CD), 1)) BASE_WKMNSP,
			   NVL(A.NEW_STF_WKMNSP, TO_NUMBER(SF_APPMNG_GET_COMMCD(#{appCd}, 'OTHER_WKMNSP', 'NEWSTAFF', 'VAL1'))) NEW_STF_WKMNSP,
			   NVL(A.OTHER_WKMNSP, TO_NUMBER(SF_APPMNG_GET_COMMCD(#{appCd}, 'OTHER_WKMNSP', 'OHTER', 'VAL1'))) OTHER_WKMNSP,
			   A.OUTEXPAMT,
			   A.OTHEXPAMT,
			   A.OTHBILAMT,
			   A.PRE_OUTEXPAMT,
			   A.PRE_OTHEXPAMT,
			   A.PRE_OTHBILAMT,
			   NVL(B.EMPL_CST, 0) EMPL_CST,
			   NVL(B.CST, 0) CST,
			   ROUND((NVL((SELECT SUM(SPRJT.CNTRT_FEE) FROM NMSP.WEB_SAT_SUB_PRJT_H SPRJT WHERE SPRJT.VERSION = #{version} AND SPRJT.P_PRJTCD = A.PRJTCD),0) + NVL(A.CNTRT_FEE,0)  - NVL(PRE_OUTEXPAMT,0) - NVL(PRE_OTHEXPAMT,0) + NVL(PRE_OTHBILAMT,0) - NVL(EMPL_CST,0) - NVL(CST, 0))/1000000) EXP_CM,
			   A.STAT
			FROM
			(
			SELECT A.*,
				     B.PRJTNM, 
			       B.PRDTCD,
			       C.OUTEXPAMT,      /* 외주비 */ 
			       C.OTHEXPAMT,      /* 부대비용 */ 
			       C.OTHBILAMT,      /* 부대비용 청구 */ 
			       C.PRE_OUTEXPAMT,  /* 예상 외주비 */ 
			       C.PRE_OTHEXPAMT,  /* 예상 부대비용 */ 
			       C.PRE_OTHBILAMT   /* 예상 부대비용 청구 */ 
			  FROM NMSP.WEB_SAT_PRJT_H A, 
			       NMSP.PMPRJTBS B,
			       PMCONTEST C
			 WHERE A.PRJTCD = B.PRJTCD1||'-'||B.PRJTCD2||'-'||B.PRJTCD3
			 	   AND B.PRJTCD1=C.PRJTCD1(+)
			       AND B.PRJTCD2=C.PRJTCD2(+)
			       AND B.PRJTCD3=C.PRJTCD3(+)
			       AND A.PRJTCD = #{prjtCd}
             AND A.VERSION = #{version} 
			) A,
			(
			SELECT B.PRJTCD,
				   SUM(TOT_ASGN_TM) SUM_MEMB_BDGT,							/* 예산 시간 */ 
			       SUM(TOT_ASGN_TM_WKMNSP)  SUM_MEMB_BDGT_WKMNSP,			/* 예산 시간 * 숙련도 */
			       SUM(FIXPARATE * TOT_ASGN_TM) EMPL_CST, 		    		/* 총 인건비 */
			       ROUND(SUM(FIXPARATE * TOT_ASGN_TM * EXPRATE / 100)) CST 	/* 경비 */
			  FROM 
			       (SELECT C.CMOFCD, 
			              A.GRADE CMGRADCD , 
			              A.FIXPARATE, 
			              B.EXPRATE 
			         FROM PMSTPAYRATE A, 
			              PMSTEXP B, 
			              CMTEAMCD C 
			        WHERE A.YEARLY = B.YEARLY 
			              AND A.BONBCD = B.BONBCD 
			              AND A.YEARLY = SF_PM_GET_CYEARLY('01',TO_CHAR((SELECT CREDT FROM WEB_SAT_PRJT_H WHERE VERSION = #{version} AND  PRJTCD=#{prjtCd}),'YYYYMM'),'2') 
			              AND A.BONBCD = C.TEAMCD 
			          ) A, 
			      (SELECT A.PRJTCD, 
			             C.CMGRADCD, 
			             D.CMOFCD,
                   A.VERSION,
			             SUM(TOT_ASGN_TM) TOT_ASGN_TM,
			             SUM(TOT_ASGN_TM * WKMNSP) TOT_ASGN_TM_WKMNSP
			        FROM (SELECT A.VERSION, 
              				     A.PRJTCD, 
			        			       A.MEMB_EMPLNO, 
                           (SELECT SUM(ASGN_TM) 
                              FROM WEB_SAT_MEMB_BDGT_H TMP 
                             WHERE TMP.VERSION = A.VERSION 
                               AND TMP.ACTV_CD = A.ACTV_CD 
                               AND TMP.LOCA_CD = A.LOCA_CD 
                               AND TMP.MEMB_EMPLNO = A.MEMB_EMPLNO
                            ) TOT_ASGN_TM,
			        			        A.WKMNSP, 
			        			        A.CREDT  
                        FROM NMSP.WEB_SAT_MEMB_H A 
                   		 WHERE A.PRJTCD = #{prjtCd}) A, 
                   NMSP.HREMP B, 
                   NMSP.HRGRAD C, 
                   NMSP.CMTEAMH D 
             WHERE A.MEMB_EMPLNO = B.EMPLNO 
                   AND B.GRADCD = C.GRADCD 
                   AND A.PRJTCD = #{prjtCd} 
                   AND D.TEAMCD = SAC_HR.F_FRM_CAM_HISTORY(B.EMP_ID, 'KO', A.CREDT, 'ORG_CD') 
                   AND D.YEARLY = NMSP.SF_PM_GET_CYEARLY('01', TO_CHAR(A.CREDT, 'YYYYMM'), '2') 
                   AND A.VERSION = #{version}
             GROUP BY A.PRJTCD, 
                   C.CMGRADCD, 
                   D.CMOFCD,
                   A.VERSION
			      ) B 
			    WHERE A.CMGRADCD = B.CMGRADCD 
			          AND A.CMOFCD = B.CMOFCD 
					GROUP BY B.PRJTCD
			) B
			WHERE A.PRJTCD= B.PRJTCD(+)
		) A
	</select>
	
	
	<select id="getProjectBudgetMemberHist" parameterType="ProjectVersionVO" resultType="ProjectBudgetMemberVO">
		SELECT ACTV_CD||'_'||LOCA_CD||'_'||MEMB_EMPLNO ID, 
			   ACTV_CD, 
		       NMSP.SF_APPMNG_GET_COMMCD(#{appCd}, 'ACTV', ACTV_CD, 'NM') ACTV_NM, 
		       LOCA_CD, 
		       NMSP.SF_APPMNG_GET_COMMCD(#{appCd}, 'LOCA', LOCA_CD, 'NM') LOCA_NM, 
		       MEMB_EMPLNO EMPLNO, 
		       GRADCD,
		       NMSP.SF_EMP_NAME(MEMB_EMPLNO) KORNM, 
		       (SELECT GRADNM FROM NMSP.HRGRAD B WHERE B.GRADCD = A.GRADCD AND ROWNUM = 1) GRADNM,
		       WKMNSP, 
		       TOT_ASGN_TM,
		       ROUND(TOT_ASGN_TM * WKMNSP, 2) TOT_WKMNSP_ASGN_TM,
		       NMSP.SF_WEB_SAT_GET_ACTUAL_TM(PRJTCD, REPLACE(PRJT_FRDT, '-', ''), REPLACE(PRJT_TODT, '-', ''), MEMB_EMPLNO) ACTUAL_TM,
		       <foreach collection="weeks" item="week" separator=",">WEEK${week.weekNum}</foreach>
		  FROM 
		       (SELECT A.PRFL_ID, 
		              A.PRJTCD,
		              A.PRJT_FRDT,
		              A.PRJT_TODT,
		              C.ACTV_CD, 
		              C.LOCA_CD, 
		              C.MEMB_EMPLNO,
		              C.GRADCD,
		              SUM(D.ASGN_TM) OVER (PARTITION BY D.PRJTCD, D.ACTV_CD, D.LOCA_CD, D.MEMB_EMPLNO) TOT_ASGN_TM,
		              C.WKMNSP,
		              SF_WEB_SAT_GET_WEEK_INDEX(REPLACE(A.PRJT_FRDT, '-', ''), REPLACE(A.PRJT_TODT, '-', ''), REPLACE(D.WEEK_FRDT, '-', '')) WEEK_IDX, 
		              D.ASGN_TM 
		         FROM (SELECT * FROM NMSP.WEB_SAT_PRJT_H WHERE VERSION=#{version}) A, 
		              NMSP.PMPRJTBS B, 
		              (SELECT * FROM NMSP.WEB_SAT_MEMB_H WHERE VERSION=#{version}) C, 
		              (SELECT * FROM NMSP.WEB_SAT_MEMB_BDGT_H WHERE VERSION=#{version}) D 
		        WHERE A.PRJTCD1 = B.PRJTCD1 
		              AND A.PRJTCD2 = B.PRJTCD2 
		              AND A.PRJTCD3 = B.PRJTCD3 
		              AND A.PRJTCD = C.PRJTCD 
		              AND C.PRJTCD = D.PRJTCD(+) 
		              AND C.MEMB_EMPLNO = D.MEMB_EMPLNO(+) 
		              AND C.ACTV_CD = D.ACTV_CD(+)
		              AND C.LOCA_CD = D.LOCA_CD(+)
		              AND A.PRJTCD = #{prjtCd}
		       ) PIVOT ( MAX(ASGN_TM) FOR WEEK_IDX IN (
		       	 <foreach collection="weeks" item="week" separator=",">'${week.weekNum}' WEEK${week.weekNum}</foreach>
		       )) A
		  ORDER BY NMSP.SF_APPMNG_GET_COMMCD(#{appCd}, 'ACTV', ACTV_CD, 'ORDBY'), A.GRADCD
	</select>
</mapper>